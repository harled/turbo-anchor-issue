<h1>Turbo Anchors</h1>

<p>
 The purpose of this site is to demonstrate how turbo behaves with anchors. A common pattern that we use is in-app
 notifications (with noticed of cours!), where we have an endpoint to mark a notification as read and then redirect 
 the user to the relevant page. The general flow looks like:
</p>

<ol>
  <li>Link clicked to follow notification (i.e. user mentioned in a discussion comment)</li>
  <li>Notification marked as read</li>
  <li>User redirected to the related notification endpoint (i.e. a specific comment added to a discussion thread)</li>
</ol>

<p>
 The controller endpoint always returns with a redirect to this page, with an anchor of <code>comment_100</code>. 
</p>

<p>
 The expected result for clicking on any "test" link is that the page should scroll to the green, <code>comment_100</code>.
</p>

<table>
  <tr>
    <th>Method</th>
    <th>Turbo</th>
    <th>URL</th>
    <th>Target</th>
    <th>Test</th>
    <th>Status</th>
    <th>Comments</th>
  </tr>
  <tr>
    <td>patch</td>
    <td>yes</td>
    <td><%= anchor_mark_as_read_path %></td>
    <td>comment_100</td>
    <td><%= link_to "test", anchor_mark_as_read_path, data: { "turbo-method": :patch } %></td>
    <td style="color: red;">fail</td>
    <td>Does nothing.</td>
  </tr>
  <tr>
    <td>get</td>
    <td>yes</td>
    <td><%= anchor_mark_as_read_path %></td>
    <td>comment_100</td>
    <td><%= link_to "test", anchor_mark_as_read_path %></td>
    <td style="color: red;">fail</td>
    <td>Does nothing.</td>
  </tr>
  <tr>
    <td>get</td>
    <td>no</td>
    <td><%= anchor_mark_as_read_path %></td>
    <td>comment_100</td>
    <td><%= link_to "test", anchor_mark_as_read_path, data: { turbo: false } %></td>
    <td style="color: green;">pass</td>
    <td>No turbo, works as expected.</td>
  </tr>
  <tr>
    <td>patch</td>
    <td>yes</td>
    <td><%= anchor_mark_as_read_path(anchor: "comment_100") %></td>
    <td>comment_100</td>
    <td><%= link_to "test", anchor_mark_as_read_path(anchor: "comment_100"), data: { "turbo-method": :patch } %></td>
    <td style="color: red;">fail</td>
    <td>Specify the anchor in the link.</td>
  </tr>
  <tr>
    <td>get</td>
    <td>yes</td>
    <td><%= anchor_mark_as_read_path(anchor: "comment_100") %></td>
    <td>comment_100</td>
    <td><%= link_to "test", anchor_mark_as_read_path(anchor: "comment_100") %></td>
    <td style="color: green;">pass</td>
    <td>Specify the anchor in the link and it works "by accident".</td>
  </tr>
  <tr>
    <td>get</td>
    <td>yes</td>
    <td><%= anchor_mark_as_read_path(anchor: "bad_comment") %></td>
    <td>bad_comment</td>
    <td><%= link_to "test", anchor_mark_as_read_path(anchor: "bad_comment") %></td>
    <td style="color: red;">fail</td>
    <td>Also works in a completely unexpected way. The link_to anchor dominates the Location url.</td>
  </tr>
</table>

<% if false %>

<p>
  Here are some sample comments.
</p>

<ul>
  <% (1..99).each do |comment| %>
 <li>This is a sample comment <%= comment %></li>
  <% end %>
</ul>


<turbo-frame id="comment_100" style="background-color: green;">
 <h1>COMMENT 100</h1>
 <p>
    This is the comment that we were notified about and want to scroll to automatically 
    via the <code>comment_100</code> page anchor.
 </p>
</turbo-frame>

<ul>
  <% (101..200).each do |comment| %>
 <li>This is a sample comment <%= comment %></li>
  <% end %>
</ul>

<turbo-frame id="bad_comment">
 <h1>BAD COMMENT</h1>
 <p>
    How did we get here? The <code>link_to</code> anchor is taking over the redirect to anchor (i.e. the browser Location
    is <code>comment_100</code> but the link_to was <code>bad_comment</code>).
 </p>
</turbo-frame>

<% end %>